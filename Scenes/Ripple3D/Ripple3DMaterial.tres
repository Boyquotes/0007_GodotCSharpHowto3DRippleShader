[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;

uniform sampler2D water_layer1;
uniform float ripple_amplitude:hint_range(0.01,10,0.01) = 0.5;
uniform float ripple_resolution:hint_range(0.1,10,0.01) = 3.0;
uniform float ripple_speed:hint_range(0.01,10,0.01) = 1.0;
uniform float ripple_max_amp:hint_range(0.01,10.0, 0.01) = 0.8;

void vertex() {
	float z = sqrt(VERTEX.x * VERTEX.x + VERTEX.z * VERTEX.z);
	float sombrero = ripple_amplitude *  sin(z * ripple_resolution - TIME * ripple_speed) / z;
	sombrero = clamp(sombrero, -ripple_max_amp, ripple_max_amp);
	VERTEX.y = sombrero;
}

void fragment() {
	vec4 water = texture(water_layer1, UV);
	ALBEDO = vec3(water.rgb);
}"

[sub_resource type="OpenSimplexNoise" id=4]

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[resource]
shader = SubResource( 1 )
shader_param/ripple_amplitude = 5.23
shader_param/ripple_resolution = 0.86
shader_param/ripple_speed = 1.58
shader_param/ripple_max_amp = 0.43
shader_param/water_layer1 = SubResource( 5 )
